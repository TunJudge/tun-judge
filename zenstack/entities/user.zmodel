import 'role'
import 'team'
import 'file'
import 'judge-host'
import 'judging'
import 'clarification-message'

model User {
  id            Int                    @id @default(autoincrement())
  name          String
  username      String                 @unique
  password      String                 @password
  email         String?
  lastLogin     DateTime?
  lastIpAddress String?
  enabled       Boolean                @default(true)
  sessionId     String?                @omit
  roleName      String
  role          Role                   @relation(fields: [roleName], references: [name])
  teamId        Int?
  team          Team?                  @relation(fields: [teamId], references: [id], onDelete: SetNull, onUpdate: Restrict)
  files         File[]
  judgeHost     JudgeHost?
  judgings      Judging[]
  sentMessages  ClarificationMessage[]
  seenMessages  ClarificationSeen[]

  @@allow('read', auth() != null && (auth().roleName == 'admin' || auth().roleName == 'jury'))
  @@allow('read', auth() != null && auth().roleName == 'team' && sentMessages?[clarification.contest.enabled == true && (clarification.contest.openToAllTeams == true || clarification.contest.teams?[teamId == auth().teamId]) && (clarification.general == true || clarification.teamId == auth().teamId)])
  @@allow('read', auth() != null && auth().roleName == 'team' && seenMessages?[message.clarification.contest.enabled == true && (message.clarification.contest.openToAllTeams == true || message.clarification.contest.teams?[teamId == auth().teamId]) && (message.clarification.general == true || message.clarification.teamId == auth().teamId)])
  @@allow('create,update,delete', auth() != null && auth().roleName == 'admin')
}
