import 'contest'
import 'problem'
import 'team'
import 'clarification-message'

model Clarification {
  id        Int                    @id @default(autoincrement())
  general   Boolean                @default(true)
  messages  ClarificationMessage[]
  contestId Int
  contest   Contest                @relation(fields: [contestId], references: [id], onDelete: Cascade, onUpdate: Restrict)
  problemId Int?
  problem   ContestProblem?        @relation(fields: [problemId], references: [id], onDelete: Cascade, onUpdate: Restrict)
  teamId    Int?
  team      Team?                  @relation(fields: [teamId], references: [id], onDelete: Cascade, onUpdate: Restrict)

  @@allow('read', auth() != null && auth().roleName in ['admin', 'jury'])
  @@allow('read,create', auth() != null && auth().roleName == 'team' && contest.enabled == true && (contest.openToAllTeams == true || contest.teams?[teamId == auth().teamId]) && (general == true || teamId == auth().teamId))
  @@allow('create,update,delete', auth() != null && auth().roleName == 'admin')
}
