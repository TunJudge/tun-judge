import 'user'
import 'clarification'

model ClarificationMessage {
  id              Int                 @id @default(autoincrement())
  content         String
  sentTime        DateTime
  sentById        Int
  sentBy          User                @relation(fields: [sentById], references: [id], onDelete: Restrict, onUpdate: Restrict)
  seenBy          ClarificationSeen[]
  clarificationId Int
  clarification   Clarification       @relation(fields: [clarificationId], references: [id], onDelete: Cascade, onUpdate: Restrict)

  @@allow('read', auth() != null && auth().roleName in ['admin', 'jury'])
  @@allow('create', auth() != null && auth().roleName == 'jury')
  @@allow('read,create', auth() != null && auth().roleName == 'team' && clarification.contest.enabled == true && (clarification.contest.openToAllTeams == true || clarification.contest.teams?[teamId == auth().teamId]) && (clarification.general == true || clarification.teamId == auth().teamId))
  @@allow('create,update,delete', auth() != null && auth().roleName == 'admin')
}

model ClarificationSeen {
  userId    Int
  user      User                 @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Restrict)
  messageId Int
  message   ClarificationMessage @relation(fields: [messageId], references: [id], onDelete: Cascade, onUpdate: Restrict)

  @@id([userId, messageId])
  @@allow('read', auth() != null && auth().roleName in ['admin', 'jury'])
  @@allow('create', auth() != null && auth().roleName == 'jury')
  @@allow('read', auth() != null && auth().roleName == 'team' && message.clarification.contest.enabled == true && (message.clarification.contest.openToAllTeams == true || message.clarification.contest.teams?[teamId == auth().teamId]) && (message.clarification.general == true || message.clarification.teamId == auth().teamId))
  @@allow('create', auth() != null && auth().roleName == 'team' && message.clarification.contest.enabled == true && (message.clarification.contest.openToAllTeams == true || message.clarification.contest.teams?[teamId == auth().teamId]) && message.clarification.teamId == auth().teamId)
  @@allow('create,update,delete', auth() != null && auth().roleName == 'admin')
}
